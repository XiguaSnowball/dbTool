1）最上层testDBTool目录是项目名称，一个项目下可以包括多个模块，也就是应用，每个应用下有自己的配置文件，初始化文件，MVC架构。

2）runserver.py：与应用模块平级，作为项目启动文件

3）第二级testDBTool目录：模块名称 :

controller目录-MVC中的C,主要存放视图函数
model目录-MVC中的M,主要存放实体类文件，映射数据库中表
templates-MVC中的V，存放html文件
static-静态文件，主要存放css，js等文件
__init__.py-模块初始化文件，Flask 程序对象的创建必须在 __init__.py 文件里完成， 然后我们就可以安全的导入引用每个包。
setting.py-配置文件，数据库用户名密码等等

4）运行 :
运行runserver.py,端口可自定义
1.接口连接 /console/crm/instrument/bd/monthGMVData
2.请求方式 POST
3.请求参数示例
Request body参数
{"database":"test",
"hostNameList":["beta7","beta8"],
"sqlStr":"CREATE TABLE `gms_config` (`id` int(11) NOT NULL AUTO_INCREMENT,`key` varchar(50) COLLATE utf8_bin NOT NULL COMMENT 'Key',`value` varchar(2000) COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Value',`description` varchar(200) COLLATE utf8_bin NOT NULL COMMENT 'Value',`create_user` varchar(30) COLLATE utf8_bin NOT NULL COMMENT '创建人',`create_time` datetime NOT NULL COMMENT '创建时间',`update_user` varchar(30) COLLATE utf8_bin DEFAULT NULL COMMENT '修改人',`update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',`del_flag` tinyint(1) NOT NULL DEFAULT '1' COMMENT '1:正常|0:删除',`type` smallint(6) DEFAULT '0' COMMENT '0:系统配置;1业务配置;2其他',PRIMARY KEY (`id`),UNIQUE KEY `gms_config_key` (`key`) USING BTREE,KEY `gms_config_del_flag` (`del_flag`) USING BTREE) ENGINE=InnoDB AUTO_INCREMENT=195 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;"}

5）注意 :
sql语句不要有换行
6）日志 :
日志路径testDBTool.model.utils.result